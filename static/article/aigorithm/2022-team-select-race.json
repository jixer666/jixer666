{"filename":"2022-team-select-race","category":"aigorithm","md":{"topSummary":"\ntitle: 2022年算法队选拔赛\ncategory: 算法\ndate: 2024-05-09\nauthor: Jixer\nsource: 原创\n\n","mainContent":"\n\n回顾大二打的算法队选拔的算法赛\n\n感觉现在做起来很轻松，练题还是有效果的\n\n题目地址：https://vjudge.net/contest/513277\n\n## A - Numbers\n\n签到题，很清除的记得当时没看清楚题要求，输出化简后的格式，一直没化简....\n\n ```c++\n #include<bits/stdc++.h>\n #define endl \"\\n\"\n using namespace std;\n typedef long long ll;\n typedef pair<int, int> PII;\n const int N = 1e6 + 10, M = 1e9 + 10;\n int ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\n int a, b, x, y, z, res;\n \n int fun(int x, int y){\n \treturn y ? fun(y, x % y) : x;\n }\n \n int main(){\n \tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n \tcin >> a;\n \tfor(int i = 2; i <= a - 1; i ++){\n \t\tint num = a;\n \t\twhile(num){\n \t\t\tres += num % i;\n \t\t\tnum /= i;\n \t\t} \n \t}\n \tint cc = fun(res, a - 2);\n \tcout << res / cc << \"/\" << (a - 2) / cc << endl; \n \t\n \treturn 0;\n }\n ```\n\n## B - 表达式求值\n\n不用考虑括号写起来就很nice\n\n ```c++\n #include<bits/stdc++.h>\n #define endl \"\\n\"\n using namespace std;\n typedef long long ll;\n typedef pair<int, int> PII;\n const int N = 1e6 + 10, M = 1e9 + 10;\n int ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\n int a, b, x, y, z;\n ll res;\n stack<ll> s1;\n stack<char> s2;\n unordered_map<char, int> ump;\n \n void init(){\n \tump['+'] = 1;\n \tump['*'] = 2;\n }\n \n void fun(char c){\n \twhile(s2.size() && s1.size() >= 2 && ump[s2.top()] >= ump[c]){\n \t\tll num1 = s1.top(), cot = 0;\n \t\ts1.pop();\n \t\tll num2 = s1.top();\n \t\ts1.pop();\n \t\tchar c = s2.top();\n \t\ts2.pop();\n \t\tif(c == '+') cot = num1 + num2;\n \t\telse cot = num1 * num2;\n \t\ts1.push(cot);\n \t}\t\n \ts2.push(c);\t\n }\n \n void end(){\n \twhile(s2.size() && s1.size() >= 2){\n \t\tll num1 = s1.top(), cot = 0;\n \t\ts1.pop();\n \t\tll num2 = s1.top();\n \t\ts1.pop();\n \t\tchar c = s2.top();\n \t\ts2.pop();\n \t\tif(c == '+') cot = num1 + num2;\n \t\telse cot = num1 * num2;\n \t\ts1.push(cot);\n \t}\t\n }\n \n int main(){\n \tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n \tinit();\n \tstring str;\n \tcin >> str;\n \tfor(int i = 0; i < str.size(); i++){\n \t\tint idx = i;\n \t\tll num = 0;\n \t\twhile(str[idx] >= '0' && str[idx] <= '9'){\n \t\t\tnum = num * 10 + str[idx] - '0';\n \t\t\tidx ++;\n \t\t}\n \t\tif(num != 0){\n \t\t\ts1.push(num);\n \t\t\ti = idx - 1;\n \t\t\tcontinue;\n \t\t}\n \t\tif(str[i] == '+' || str[i] == '*'){\n \t\t\tfun(str[i]);\n \t\t}\n \t}\n \tend();\n \tcout << s1.top() % 10000 << endl;\n \t\n \treturn 0;\n }\n ```\n\n## C - T-primes\n\n数据量很大，需要用到质数筛\n\n```c++\n#include<bits/stdc++.h>\n#define endl \"\\n\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> PII;\nconst int N = 1e6 + 10, M = 1e9 + 10;\nint ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\nint a, b, x, y, z, res;\nint n[N], st[N], idx;\n\nvoid init(){\n\tst[1] = 1;\n\tfor(int i = 2; i <= N; i ++){\n\t\tif(!st[i]) n[idx ++] = i; \n\t\tfor(int j = 0; n[j] <= N / i; j ++){\n\t\t\tst[n[j] * i] = 1;\n\t\t\tif(i % n[j] == 0) break;\n\t\t}\n\t}\n}\n\nint main(){\n\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tinit();\n\tcin >> a;\n\tfor(int i = 0; i < a; i++){\n\t\tll num;\n\t\tcin >> num;\n\t\tll cc = sqrt(num);\n\t\tif(cc * cc == num && !st[cc]){\n\t\t\tcout << \"YES\" << endl; \n\t\t} else {\n\t\t\tcout << \"NO\" << endl;\n\t\t}\n\t}\n    \n\treturn 0;\n}\n```\n\n## D - New Year's Number\n\n签到题\n\n ```c++\n #include<bits/stdc++.h>\n #define endl \"\\n\"\n using namespace std;\n typedef long long ll;\n typedef pair<int, int> PII;\n const int N = 1e6 + 10, M = 1e9 + 10;\n int ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\n int a, b, x, y, z;\n \n int main(){\n \tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n \tcin >> a;\n \twhile(a --){\n \t\tcin >> b;\n \t\tint flag = 0;\n \t\tfor(int i = 0; i <= b / 2020; i ++){\n \t\t\tint f = 0;\n \t\t\tfor(int j = 0; j <= b / 2021; j ++){\n \t\t\t\tint cc = i * 2020 + j * 2021;\n \t\t\t\tif(cc > b){\n \t\t\t\t\tbreak;\n \t\t\t\t} else if(cc == b){\n \t\t\t\t\tf = 1;\n \t\t\t\t\tflag = 1;\n \t\t\t\t\tbreak;\n \t\t\t\t} \n \t\t\t}\n \t\t\tif(f){\n \t\t\t\tbreak;\n \t\t\t}\n \t\t}\n \t\tif(flag) cout << \"YES\" << endl;\n \t\telse cout << \"NO\" << endl;\n \t} \n \t\n \treturn 0;\n }\n ```\n\n## E - 最小新整数\n\n 单调栈\n\n```c++\n#include<bits/stdc++.h>\n#define endl \"\\n\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> PII;\nconst int N = 1e6 + 10, M = 1e9 + 10;\nint ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\nint a, b, x, y, z, res;\n\nstring get(stack<char> s){\n\tstring res = \"\";\n\twhile(s.size()){\n\t\tres = s.top() + res;\n\t\ts.pop();\n\t} \n\treturn res;\n}\n\nint main(){\n\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tstring str;\n\tcin >> a;\n\twhile(a --){\n\t\tcin >> str >> x;\n\t\tstack<char> s;\n\t\tint len = str.size(), cot = 0;\n\t\tfor(int i = 0; i < len; i++){\n\t\t\twhile(!s.empty() && s.top() > str[i] && cot < x){\n\t\t\t\tcot ++;\n\t\t\t\ts.pop();\n\t\t\t}\n\t\t\ts.push(str[i]);\n\t\t}\n\t\tif(cot == x){\n\t\t\tcout << get(s) << endl;\n\t\t} else {\n\t\t\tint num = x - cot;\n\t\t\tstring str = get(s);\n\t\t\tfor(int i = 0; i < str.size() - num; i++){\n\t\t\t\tcout << str[i];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n    \n\treturn 0;\n}\n```\n\n## F - Count\n\n 矩阵快速幂\n\n\n\n\n\n","title":" 2022年算法队选拔赛\n","category":[" 算法\n"],"date":" 2024-05-09\n","author":" Jixer\n","source":" 原创\n\n"}}