{"filename":"14th-lqb-B-1","category":"aigorithm","md":{"topSummary":"\ntitle: 第十四届蓝桥杯B组国赛\ncategory: 算法\ndate: 2024-05-05\nauthor: Jixer\nsource: 原创\n\n","mainContent":"\n\n## 子2023\n\n有两种方法，一种暴力枚举，一种动态规划\n\n暴力枚举：需要等一两分钟\n\n```c++\n#include<bits/stdc++.h>\n#define endl \"\\n\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> PII;\nconst int N = 1e6 + 10, M = 1e9 + 10;\nint ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\nint a, b, x, y, z;\n\nint main(){\n\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tstring str = \"\";\n\tfor(int i = 1; i <= 2023; i++){\n\t\tstring ss = to_string(i);\n\t\tfor(int j = 0 ; j < ss.size(); j++){\n\t\t\tif(ss[j] == '2' || ss[j] == '0' || ss[j] == '3'){\n\t\t\t\tstr += ss[j];\n\t\t\t}\n\t\t}\n\t} \n\tint len = str.size();\n\tll res = 0;\n\tfor(int i = 0; i < len; i++){\n\t\tif(str[i] != '2') continue;\n\t\tfor(int j = i + 1; j < len; j ++){\n\t\t\tif(str[j] != '0') continue;\n\t\t\tfor(int z = j + 1; z < len; z ++){\n\t\t\t\tif(str[z] != '2') continue;\n\t\t\t\tfor(int x = z + 1; x < len; x ++){\n\t\t\t\t\tif(str[x] != '3') continue;\n\t\t\t\t\tif(str[i] == '2' && str[j] == '0' && str[z] == '2' && str[x] == '3'){\n\t\t\t\t\t\tres ++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << res << endl;\n\t\n\treturn 0;\n}\n```\n\n动态规划\n\n```c++\n#include<bits/stdc++.h>\n#define endl \"\\n\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> PII;\nconst int N = 1e6 + 10, M = 1e9 + 10;\nint ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\nint a, b, x, y, z;\nll dp[5];\n\nint main(){\n\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tstring str = \"\";\n\tfor(int i = 1; i <= 2023; i++){\n\t\tstring ss = to_string(i);\n\t\tfor(int j = 0 ; j < ss.size(); j++){\n\t\t\tif(ss[j] == '2' || ss[j] == '0' || ss[j] == '3'){\n\t\t\t\tstr += ss[j];\n\t\t\t}\n\t\t}\n\t} \n\tint len = str.size();\n\tfor(int i = 0; i < len; i++){\n\t\tif(str[i] == '2'){\n\t\t\tdp[1] ++;\n\t\t\tdp[3] += dp[2]; \n\t\t} else if(str[i] == '0'){\n\t\t\tdp[2] += dp[1];\n\t\t} else if(str[i] == '3'){\n\t\t\tdp[4] += dp[3]; \n\t\t}\n\t}\n\tcout << dp[4] << endl;\n\t\n\treturn 0;\n}\n```\n\n\n\n## 班级活动\n\n本题需要注意一下几点：\n\n- 重复学生数量小于没有重复的数量\n- 重复学生数量大于没有重复数量，且重复数量为偶数\n- 重复学生数量大于没有重复数量，且重复数量为奇数\n\n```c++\n#include<bits/stdc++.h>a\n#define endl \"\\n\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> PII;\nconst int N = 1e6 + 10, M = 1e9 + 10;\nint ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\nint a, b, x, y, z;\n\nint main(){\n\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tcin >> a;\n\tunordered_map<int, int> ump;\n\tint idx = 0, idx2 = 0;\n\tfor(int i = 0; i < a; i++){\n\t\tint num;\n\t\tcin >> num;\n\t\tump[num] ++;\n\t\tif(ump[num] == 2){\n\t\t\tidx ++;\n\t\t} else if(ump[num] > 2){\n\t\t\tidx2 ++;\n\t\t}\n\t}\n\tint cc = a - idx * 2 - idx2;\n\tif(cc >= idx2){\n\t\tcout << idx2 + (cc - idx2) / 2 << endl;\n\t} else {\n\t\tcout << idx2 << endl;\n\t}\n\t\n\treturn 0;\n}\n```\n\n## 合并数列\n\n双指针，一个指向A数组最左边，一个指向B数组最左边，同时向右移动。遇到一致的跳过，不一致的停下来只让该一个指针移动直到相同为止\n\n```c++\n#include<bits/stdc++.h>\n#define endl \"\\n\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> PII;\nconst int N = 1e6 + 10, M = 1e9 + 10;\nint ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\nint a, b, x, y, z;\n\nint main(){\n\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tcin >> a >> b;\n\tvector<int> v1(a), v2(b);\n\tfor(int i = 0; i < a; i++){\n\t\tcin >> v1[i];\n\t}\n\tfor(int i = 0; i < b; i++){\n\t\tcin >> v2[i];\n\t}\n\tint idx1 = 0, idx2 = 0, res = 0;\n\twhile(idx1 < a){\n\t\tint num1 = v1[idx1], num2 = v2[idx2];\n\t\twhile(num1 != num2){\n\t\t\tif(num1 > num2){\n\t\t\t\tidx2 ++;\n\t\t\t\tnum2 += v2[idx2];\n\t\t\t} else {\n\t\t\t\tidx1 ++;\n\t\t\t\tnum1 += v1[idx1];\n\t\t\t}\n\t\t\tres ++;\n\t\t}\n\t\tidx1 ++;\n\t\tidx2 ++;\n\t}\n\tcout << res << endl;\n\t\n\t\n\treturn 0;\n}\n```\n\n## AB路线\n\nBFS模板题，注意以下测试数据\n\n```\n2 2 10\nAA\nAB\n```\n答案为10\n这题需要标记 **走过且走的次数的点**，走过的点只要次数不一致还可以再次走，所以需要用到三维数组st来标记\n\n```cpp\n#include<bits/stdc++.h>\n#define endl \"\\n\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> PII;\nconst int N = 1e6 + 10, M = 1e9 + 10;\nint ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\nint a, b, x, y, z, res = -1;\nchar n[1010][1010];\nint st[1010][1010][12];\n\nstruct p{\n\tint x, y, cot, cc;\n};\n\nvoid bfs(int k){\n\t\n\tqueue<p> q;\n\tq.push({0, 0, 1, 0});\n\tst[0][0][1] = 1;\n\twhile(!q.empty()){\n\t\tauto top = q.front();\n\t\tq.pop();\n\t\tint x = top.x, y = top.y, cot = top.cot, cc = top.cc;\n\t\tif(x == a - 1 && y == b - 1){\n\t\t\tres = cc;\n\t\t\tbreak;\n\t\t}\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tint xx = x + ix[i], yy = y + iy[i];\n\t\t\tif(xx >= 0 && xx < a && yy >= 0 && yy < b){\n\t\t\t\tif(cot == k){\n\t\t\t\t\tif(n[x][y] == n[xx][yy] || st[xx][yy][1]) continue;\n\t\t\t\t\tst[xx][yy][1] = 1;\n\t\t\t\t\tq.push({xx, yy, 1, cc + 1});\n\t\t\t\t} else if(n[xx][yy] == n[x][y]){\n\t\t\t\t\tif(st[xx][yy][cot + 1]) continue;\n\t\t\t\t\tst[xx][yy][cot + 1] = 1;\n\t\t\t\t\tq.push({xx, yy, cot + 1, cc + 1});\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\t\n\t\n}\n\nint main(){\n\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tcin >> a >> b >> x;\n\tfor(int i = 0; i < a; i++){\n\t\tfor(int j = 0; j < b; j++){\n\t\t\tcin >> n[i][j];\n\t\t}\n\t}\n\tbfs(x);\n\tcout << res << endl;\t\n\t\n\treturn 0;\n}\n```\n\n## 抓娃娃\n\n用前缀和的思想来做\n\n根据给出的线段的两个点，求出中点，在求助中点数组的前缀和\n\n注意：因为 l，r两个点相加除2后可能出现小数，所以这里需要变通一下改为乘2\n\n```c++\n#include<bits/stdc++.h>\n#define endl \"\\n\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> PII;\nconst int N = 2e6 + 10, M = 1e9 + 10;\nint ix[4] = {1,-1,0,0}, iy[4] = {0,0,1,-1};\nint a, b, x, y, z;\nint n[N];\n\nint main(){\n\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tcin >> a >> b;\n\tfor(int i = 0; i < a; i++){\n\t\tcin >> x >> y;\n\t\tn[x + y] ++;\n\t}\n\tfor(int i = 0; i <= N; i++){\n\t\tn[i] += n[i - 1];\n\t}\n\tfor(int i = 0; i < b; i++){\n\t\tcin >> x >> y;\n\t\tcout << n[2 * y] - n[x * 2 - 1] << endl;\n\t}\n\t\n\treturn 0;\n} \n```\n\n\n\n","title":" 第十四届蓝桥杯B组国赛\n","category":[" 算法\n"],"date":" 2024-05-05\n","author":" Jixer\n","source":" 原创\n\n"}}